INFO - .......Hibernate Crud Operations Example.......

INFO - 
=======CREATE RECORDS=======

DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO - HHH000412: Hibernate Core {5.1.9.Final}
INFO - HHH000206: hibernate.properties not found
INFO - HHH000021: Bytecode provider name : javassist
DEBUG - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
DEBUG - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG - Building session factory using internal StandardServiceRegistryBuilder
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG - Building session factory using provided StandardServiceRegistry
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@ee1ede
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@ee1ede
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ee1ede
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1dacccc
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@114b82b
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c54796
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@d58939
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@d58939
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d58939
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@20f443
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@20f443
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@20f443
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@d7b7d9
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@d7b7d9
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d7b7d9
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@1754699
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@1754699
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1754699
DEBUG - Adding type registration long -> org.hibernate.type.LongType@2798e7
DEBUG - Adding type registration long -> org.hibernate.type.LongType@2798e7
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2798e7
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@221e9e
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@221e9e
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@221e9e
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@70610a
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@70610a
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70610a
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e45b5e
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e45b5e
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@acdd02
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@acdd02
DEBUG - Adding type registration string -> org.hibernate.type.StringType@15428dd
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@15428dd
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1be4777
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1347124
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@a53de4
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@a53de4
DEBUG - Adding type registration date -> org.hibernate.type.DateType@8ae45a
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8ae45a
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@ee3aa7
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@ee3aa7
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@cbf9bd
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@cbf9bd
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@cbf9bd
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a5db4b
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@1c1ac46
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c1ac46
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c1ac46
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1cbda0a
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@17b4703
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@17b4703
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@15db13f
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15db13f
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3afb99
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3afb99
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@46b90a
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46b90a
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbdd48
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbdd48
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15d616e
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@2016b0
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@2016b0
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@2016b0
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d2b9b7
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d2b9b7
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d2b9b7
DEBUG - Adding type registration row_version -> org.hibernate.type.RowVersionType@1c783c5
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@136d9d8
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@1d87b85
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@1d87b85
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@1d87b85
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e1962d
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e1962d
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e1962d
DEBUG - Adding type registration text -> org.hibernate.type.TextType@1926e90
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@b20352
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@cc0e01
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@cc0e01
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1570945
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@b533b8
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b533b8
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@126a29c
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@126a29c
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11410e5
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@23756
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@602b6b
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@c16b18
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c16b18
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@120540c
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16de067
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a7c45e
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d2af2
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e97df
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@164debb
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15b0333
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f2295
WARN - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/HibernateCRUDop]
INFO - HHH10001001: Connection properties: {user=root, password=}
INFO - HHH10001003: Autocommit mode: false
DEBUG - Initializing Connection pool with 1 Connections
INFO - HHH000115: Hibernate connection pool size: 1 (min=1)
DEBUG - Database ->
       name : MySQL
    version : 5.5.5-10.1.29-MariaDB
      major : 5
      minor : 5
DEBUG - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.45 ( Revision: 9131eefa398531c7dc98776e8a3fe839e544c5b2 )
      major : 5
      minor : 1
DEBUG - JDBC version : 4.0
INFO - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Binding entity from annotated class: com.demo.hibernatecrudoperations.Student
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Student
DEBUG - Bind entity com.demo.hibernatecrudoperations.Student on table Student_DB
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student_DB), mappingColumn=Stud_ID, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property studID with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.demo.hibernatecrudoperations.Student:studID]
DEBUG - building SimpleValue for studID
DEBUG - Building property studID
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student_DB), mappingColumn=Stud_Branch, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property studBranch with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.demo.hibernatecrudoperations.Student:studBranch]
DEBUG - building SimpleValue for studBranch
DEBUG - Building property studBranch
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student_DB), mappingColumn=Stud_Name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property studName with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.demo.hibernatecrudoperations.Student:studName]
DEBUG - building SimpleValue for studName
DEBUG - Building property studName
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Student_DB), mappingColumn=Stud_RollNo, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property studRollNo with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.demo.hibernatecrudoperations.Student:studRollNo]
DEBUG - building SimpleValue for studRollNo
DEBUG - Building property studRollNo
DEBUG - Starting fillSimpleValue for studID
DEBUG - Starting fillSimpleValue for studBranch
DEBUG - Starting fillSimpleValue for studName
DEBUG - Starting fillSimpleValue for studRollNo
DEBUG - Forcing column [stud_id] to be non-null as it is part of the primary key for table [student_db]
DEBUG - Building session factory
DEBUG - SessionFactory name : null
DEBUG - Automatic flush during beforeCompletion(): disabled
DEBUG - Automatic session close at end of transaction: disabled
DEBUG - Statistics: disabled
DEBUG - Deleted entity synthetic identifier rollback: disabled
DEBUG - Default entity-mode: pojo
DEBUG - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG - Allow initialization of lazy state outside session : disabled
DEBUG - Using BatchFetchStyle : LEGACY
DEBUG - Default batch fetch size: -1
DEBUG - Maximum outer join fetch depth: 2
DEBUG - Default null ordering: NONE
DEBUG - Order SQL updates by primary key: disabled
DEBUG - Order SQL inserts for batching: disabled
DEBUG - multi-tenancy strategy : NONE
DEBUG - JTA Track by Thread: enabled
DEBUG - Query language substitutions: {}
DEBUG - JPA query language strict compliance: disabled
DEBUG - Named query checking : enabled
DEBUG - Second-level cache: enabled
DEBUG - Second-level query cache: disabled
DEBUG - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@c51614
DEBUG - Second-level cache region prefix: null
DEBUG - Optimize second-level cache for minimal puts: disabled
DEBUG - Structured second-level cache entries: disabled
DEBUG - Second-level cache direct-reference entries: disabled
DEBUG - Automatic eviction of collection cache: disabled
DEBUG - JDBC batch size: 15
DEBUG - JDBC batch updates for versioned data: enabled
DEBUG - Scrollable result sets: enabled
DEBUG - Wrap result sets: disabled
DEBUG - JDBC3 getGeneratedKeys(): enabled
DEBUG - JDBC result set fetch size: null
DEBUG - Connection release mode: AFTER_TRANSACTION
DEBUG - Generate SQL with comments: disabled
DEBUG - Session factory constructed with filter configurations : {}
DEBUG - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.7.0\jre\bin, java.vm.version=20.0-b01, user.country.format=IN, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1f30035, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\workspace\hibernatecrudoperations, java.runtime.version=1.7.0-ea-b113, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hbm2ddl.auto=create-drop, hibernate.current_session_context_class=thread, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.7.0\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows NT (unknown), sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files (x86)\Java\jdk1.7.0\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files (x86)/Java/jre7/bin/client;C:/Program Files (x86)/Java/jre7/bin;C:/Program Files (x86)/Java/jre7/lib/i386;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Java\jdk1.7.0\bin;C:\apache-maven-3.5.2\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;E:\eclipse-java-luna-R-win32\eclipse;, java.class.version=51.0, java.specification.name=Java Platform API Specification, hibernate.connection.pool_size=1, sun.management.compiler=HotSpot Client Compiler, os.version=6.2, user.home=C:\Users\User, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=User, java.class.path=F:\workspace\hibernatecrudoperations\target\classes;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.1.9.Final\hibernate-core-5.1.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\5.1.45\mysql-connector-java-5.1.45.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.arch.data.model=32, java.home=C:\Program Files (x86)\Java\jdk1.7.0\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/HibernateCRUDop, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0-ea, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.7.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.7.0\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.7.0\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.7.0\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.7.0\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.7.0\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.7.0\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.7.0\jre\lib\modules\jdk.boot.jar;C:\Program Files (x86)\Java\jdk1.7.0\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, hibernate.hbm2ddl.auto=create-drop, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG - Skipping JACC integration as it was not enabled
DEBUG - Not known whether passed class name [com.demo.hibernatecrudoperations.Student] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.demo.hibernatecrudoperations.Student
DEBUG - Not known whether passed class name [com.demo.hibernatecrudoperations.Student] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.demo.hibernatecrudoperations.Student
DEBUG - Static SQL for entity: com.demo.hibernatecrudoperations.Student
DEBUG -  Version select: select Stud_ID from Student_DB where Stud_ID =?
DEBUG -  Snapshot select: select student_.Stud_ID, student_.Stud_Branch as Stud_Bra2_0_, student_.Stud_Name as Stud_Nam3_0_, student_.Stud_RollNo as Stud_Rol4_0_ from Student_DB student_ where student_.Stud_ID=?
DEBUG -  Insert 0: insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG -  Update 0: update Student_DB set Stud_Branch=?, Stud_Name=?, Stud_RollNo=? where Stud_ID=?
DEBUG -  Delete 0: delete from Student_DB where Stud_ID=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198dc19]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [NONE]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11576d7]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [READ]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34d75f]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [UPGRADE]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12297d7]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [UPGRADE_NOWAIT]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e4776b]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [UPGRADE_SKIPLOCKED]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@da1515]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [FORCE]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d652]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [PESSIMISTIC_READ]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c7cadf]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [PESSIMISTIC_WRITE]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@164804]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [PESSIMISTIC_FORCE_INCREMENT]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f4652]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [OPTIMISTIC]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1474fc]
DEBUG - Visiting attribute path : studBranch
DEBUG - Visiting attribute path : studName
DEBUG - Visiting attribute path : studRollNo
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=com.demo.hibernatecrudoperations.Student)
    - Returns
       - EntityReturnImpl(entity=com.demo.hibernatecrudoperations.Student, querySpaceUid=<gen:0>, path=com.demo.hibernatecrudoperations.Student)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.demo.hibernatecrudoperations.Student)
          - SQL table alias mapping - student0_
          - alias suffix - 0_
          - suffixed key columns - {Stud_ID1_0_0_}

DEBUG - Static select for entity com.demo.hibernatecrudoperations.Student [OPTIMISTIC_FORCE_INCREMENT]: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=?
DEBUG - Static select for action ACTION_MERGE on entity com.demo.hibernatecrudoperations.Student: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=?
DEBUG - Static select for action ACTION_REFRESH on entity com.demo.hibernatecrudoperations.Student: select student0_.Stud_ID as Stud_ID1_0_0_, student0_.Stud_Branch as Stud_Bra2_0_0_, student0_.Stud_Name as Stud_Nam3_0_0_, student0_.Stud_RollNo as Stud_Rol4_0_0_ from Student_DB student0_ where student0_.Stud_ID=?
DEBUG - Instantiated session factory
DEBUG - drop table if exists hibernate_sequence
INFO - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@178feba] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG - drop table if exists Student_DB
DEBUG - create table hibernate_sequence (next_val bigint)
INFO - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@149e631] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG - insert into hibernate_sequence values ( 1 )
DEBUG - create table Student_DB (Stud_ID integer not null, Stud_Branch varchar(255), Stud_Name varchar(255), Stud_RollNo integer, primary key (Stud_ID))
INFO - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@1ed2bbd'
DEBUG - Checking 0 named HQL queries
DEBUG - Checking 0 named SQL queries
DEBUG - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1cbcf91
DEBUG - Registering SessionFactory: 6c3b3947-9d6d-4557-be83-c81bade6eefa (<unnamed>)
DEBUG - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG - Statistics initialized [enabled=false]
DEBUG - begin
DEBUG - select next_val as id_val from hibernate_sequence for update
DEBUG - update hibernate_sequence set next_val= ? where next_val=?
DEBUG - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
INFO - 
Successfully Created '1' Records In The Database!

DEBUG - select next_val as id_val from hibernate_sequence for update
DEBUG - update hibernate_sequence set next_val= ? where next_val=?
DEBUG - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
INFO - 
Successfully Created '2' Records In The Database!

DEBUG - select next_val as id_val from hibernate_sequence for update
DEBUG - update hibernate_sequence set next_val= ? where next_val=?
DEBUG - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
INFO - 
Successfully Created '3' Records In The Database!

DEBUG - select next_val as id_val from hibernate_sequence for update
DEBUG - update hibernate_sequence set next_val= ? where next_val=?
DEBUG - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
INFO - 
Successfully Created '4' Records In The Database!

DEBUG - select next_val as id_val from hibernate_sequence for update
DEBUG - update hibernate_sequence set next_val= ? where next_val=?
DEBUG - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
INFO - 
Successfully Created '5' Records In The Database!

DEBUG - select next_val as id_val from hibernate_sequence for update
DEBUG - update hibernate_sequence set next_val= ? where next_val=?
DEBUG - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
INFO - 
Successfully Created '6' Records In The Database!

DEBUG - select next_val as id_val from hibernate_sequence for update
DEBUG - update hibernate_sequence set next_val= ? where next_val=?
DEBUG - Generated identifier: 7, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
INFO - 
Successfully Created '7' Records In The Database!

DEBUG - select next_val as id_val from hibernate_sequence for update
DEBUG - update hibernate_sequence set next_val= ? where next_val=?
DEBUG - Generated identifier: 8, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
INFO - 
Successfully Created '8' Records In The Database!

DEBUG - select next_val as id_val from hibernate_sequence for update
DEBUG - update hibernate_sequence set next_val= ? where next_val=?
DEBUG - Generated identifier: 9, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
INFO - 
Successfully Created '9' Records In The Database!

DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 9 insertions, 0 updates, 0 deletions to 9 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - com.demo.hibernatecrudoperations.Student{studName=Student102, studID=2, studBranch=Compuer Engineering, studRollNo=102}
DEBUG - com.demo.hibernatecrudoperations.Student{studName=Student101, studID=1, studBranch=Compuer Engineering, studRollNo=101}
DEBUG - com.demo.hibernatecrudoperations.Student{studName=Student106, studID=6, studBranch=Compuer Engineering, studRollNo=106}
DEBUG - com.demo.hibernatecrudoperations.Student{studName=Student105, studID=5, studBranch=Compuer Engineering, studRollNo=105}
DEBUG - com.demo.hibernatecrudoperations.Student{studName=Student104, studID=4, studBranch=Compuer Engineering, studRollNo=104}
DEBUG - com.demo.hibernatecrudoperations.Student{studName=Student103, studID=3, studBranch=Compuer Engineering, studRollNo=103}
DEBUG - com.demo.hibernatecrudoperations.Student{studName=Student109, studID=9, studBranch=Compuer Engineering, studRollNo=109}
DEBUG - com.demo.hibernatecrudoperations.Student{studName=Student108, studID=8, studBranch=Compuer Engineering, studRollNo=108}
DEBUG - com.demo.hibernatecrudoperations.Student{studName=Student107, studID=7, studBranch=Compuer Engineering, studRollNo=107}
DEBUG - insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG - insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG - insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG - insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG - insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG - insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG - insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG - insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG - insert into Student_DB (Stud_Branch, Stud_Name, Stud_RollNo, Stud_ID) values (?, ?, ?, ?)
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - Initiating JDBC connection release from afterTransaction
INFO - 
Successfully Created '9' Records In The Database!

DEBUG - HHH000420: Closing un-released batch
